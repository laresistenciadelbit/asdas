SELECT se.station,se.sensor_name,se.time, se.sensor_value, st.status_name, st.status_value from station_sensors se JOIN station_status st ON se.station==st.station and se.time=st.time;
\_al no ser outer full join no selecciona los que no tienen status

  *sqlite no permite full outer join

  *lo podemos emular con https://www.sqlitetutorial.net/sqlite-full-outer-join/

  SELECT se.station,se.sensor_name,se.time, se.sensor_value, st.status_name, st.status_value from station_sensors se LEFT JOIN station_status st USING(station,time)
   UNION ALL SELECT se.station,se.sensor_name,se.time, se.sensor_value, st.status_name, st.status_value from station_sensors se LEFT JOIN station_status st USING(station,time) where station is null and time is null;


-- fix de temperatura (cuando genera temperaturas aleatorias y suben demasiado):
update station_sensors set sensor_value=(sensor_value-sensor_value/6) where sensor_name="temperatura" and sensor_value>26;
update station_sensors set sensor_value=(sensor_value-sensor_value/7) where sensor_name="temperatura" and sensor_value>22;
update station_sensors set sensor_value=(sensor_value-sensor_value/8) where sensor_name="temperatura" and sensor_value>18;

--redondear valores de float a 2 decimales:
-- select sensor_name,sensor_value,ROUND(sensor_value * 100) / 100 from station_sensors limit 40;
update station_sensors set sensor_value=ROUND(sensor_value * 100) / 100;
update station_status set status_value=ROUND(status_value * 100) / 100;